%Idea of this test: more or less realistic values
%Tweaked route costs so more depods will be opened, also reduced capacities
ncustomers = 5;
ndepots = 3;
vehicle_capacity = 20;
capacities = [30,30,30];
demands = [20,11,3,5,10];
opening_cost = [20,2,5];
route_cost = 5;
% the distance matrix is indexed as follows:
% * the first ncustomers elements are the customers
% * the elements between ncustomers + 1 and ncustomers + ndepots are depots
distances = array2d(1..8, 1..8, [
0,3,4,8,10,2,10,20,
3,0,2,5,11,3,10,15,
4,2,0,4,8,2,9,11,
8,5,4,0,3,8,8,8,
10,11,8,3,0,15,9,2,
2,3,2,8,15,0,0,0,
10,10,5,8,9,0,0,0,
20,15,11,8,2,0,0,0]);
%Time: Finished in 21s 44msec
/*
1->7: 3
2->6: 4
3->6: 2
4->5: 1
5->6: 1
6->2: 4
6->3: 2
6->4: 1
7->1: 3
Routelengths:   [3, 2, 2, 2, 0]
StartingDepots: [6, 6, 7, 6, 0]
EndingDepots:   [6, 6, 7, 6, 0]
Capcities used: [15, 3, 20, 11, 0]
Vehicles used:  4
Open depots:    [1, 1, 0]
Used Capacities:[29, 20, 0]
Cost:           98
----------
1->7: 3
2->3: 2
3->6: 2
4->5: 1
5->6: 1
6->2: 2
6->4: 1
7->1: 3
Routelengths:   [3, 3, 2, 0, 0]
StartingDepots: [6, 6, 7, 0, 0]
EndingDepots:   [6, 6, 7, 0, 0]
Capcities used: [15, 14, 20, 0, 0]
Vehicles used:  3
Open depots:    [1, 1, 0]
Used Capacities:[29, 20, 0]
----------
1->7: 2
2->6: 3
3->6: 1
4->5: 1
5->3: 1
6->2: 3
6->4: 1
7->1: 2
Routelengths:   [4, 2, 2, 0, 0]
StartingDepots: [6, 7, 6, 0, 0]
EndingDepots:   [6, 7, 6, 0, 0]
Capcities used: [18, 20, 11, 0, 0]
Vehicles used:  3
Open depots:    [1, 1, 0]
Used Capacities:[29, 20, 0]
Cost:           84
----------
1->6: 3
2->7: 2
3->4: 1
4->5: 1
5->7: 1
6->1: 3
7->2: 2
7->3: 1
Routelengths:   [4, 2, 2, 0, 0]
StartingDepots: [7, 7, 6, 0, 0]
EndingDepots:   [7, 7, 6, 0, 0]
Capcities used: [18, 11, 20, 0, 0]
Vehicles used:  3
Open depots:    [1, 1, 0]
Used Capacities:[20, 29, 0]
Cost:           82
----------
1->6: 3
2->7: 1
3->2: 1
4->5: 2
5->7: 2
6->1: 3
7->3: 1
7->4: 2
Routelengths:   [3, 3, 2, 0, 0]
StartingDepots: [7, 7, 6, 0, 0]
EndingDepots:   [7, 7, 6, 0, 0]
Capcities used: [14, 15, 20, 0, 0]
Vehicles used:  3
Open depots:    [1, 1, 0]
Used Capacities:[20, 29, 0]
Cost:           78
----------
1->6: 3
2->7: 2
3->2: 2
4->5: 1
5->8: 1
6->1: 3
7->3: 2
8->4: 1
Routelengths:   [3, 3, 2, 0, 0]
StartingDepots: [8, 7, 6, 0, 0]
EndingDepots:   [8, 7, 6, 0, 0]
Capcities used: [15, 14, 20, 0, 0]
Vehicles used:  3
Open depots:    [1, 1, 1]
Used Capacities:[20, 14, 15]
Cost:           76
----------
1->6: 2
2->4: 1
3->2: 1
4->8: 1
5->8: 3
6->1: 2
8->3: 1
8->5: 3
Routelengths:   [4, 2, 2, 0, 0]
StartingDepots: [8, 6, 8, 0, 0]
EndingDepots:   [8, 6, 8, 0, 0]
Capcities used: [19, 20, 10, 0, 0]
Vehicles used:  3
Open depots:    [1, 0, 1]
Used Capacities:[20, 0, 29]
Cost:           74
----------
1->6: 2
2->4: 1
3->2: 1
4->7: 1
5->8: 3
6->1: 2
7->3: 1
8->5: 3
Routelengths:   [4, 2, 2, 0, 0]
StartingDepots: [7, 6, 8, 0, 0]
EndingDepots:   [7, 6, 8, 0, 0]
Capcities used: [19, 20, 10, 0, 0]
Vehicles used:  3
Open depots:    [1, 1, 1]
Used Capacities:[20, 19, 10]
Cost:			70
----------
==========
Finished in 21s 44msec
*/